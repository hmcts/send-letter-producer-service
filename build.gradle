plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.4.RELEASE'
  id 'org.flywaydb.flyway' version '5.0.7'
  id 'org.springframework.boot' version '1.5.10.RELEASE'
  id 'org.owasp.dependencycheck' version '3.1.0'
  id 'com.github.ben-manes.versions' version '0.17.0'
  id 'org.sonarqube' version '2.6.1'
}

flyway {
  url = System.getenv('FLYWAY_URL')
  user = System.getenv('FLYWAY_USER')
  password = System.getenv('FLYWAY_PASSWORD')
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked"
}

compileTestJava {
  options.compilerArgs << "-Xlint:unchecked"
}

compileFunctionalTestJava {
  options.compilerArgs << "-Xlint:unchecked"
}

task functionalTest(type: Test) {
  description = "Runs Functional Tests"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.7'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "5.8.1"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, functionalTest)
  reports {
    xml.enabled = true
    csv.enabled = false
  }
}

project.tasks['sonarqube'].dependsOn test, functionalTest
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: Send Letter Producer"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/functionalTest.exec"
  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
}

def springBootVersion = plugins.getPlugin('org.springframework.boot').class.package.implementationVersion

repositories {
  // until new projects get to jcenter
  maven {
    url  "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  jcenter()
}

distributions {
  main {
    contents {
      from(file("$rootDir/lib/AI-Agent.xml")) {
        into "lib"
      }
    }
  }
}

def versions = [
  springfoxSwagger: '2.7.0',
  logging: '1.5.0',
  jackson: dependencyManagement.importedProperties['jackson.version'],
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springBootVersion

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson

  compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7'
  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'http-proxy-spring-boot-autoconfigure', version: '1.1.0'
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '0.4.2'

  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: '1.4.0.RELEASE'
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix-dashboard', version: '1.4.0.RELEASE'

  compile group: 'com.microsoft.azure', name: 'azure-servicebus', version: '1.1.1'

  compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springBootVersion

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
  functionalTestCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.17.1'
}

jar {
  archiveName 'send-letter-producer-service.jar'
}
